from fastapi import FastAPI, Depends
from sqlalchemy.orm import Session
from fastapi.middleware.cors import CORSMiddleware
from database.models.models import Ticket  # імпортуємо конкретну модель
from database.dependencies import get_db
from settings.settings import settings

# CORS
app.add_middleware(
    CORSMiddleware,
    allow_origins=settings.ALLOW_ORIGINS,
    allow_credentials=settings.ALLOW_CREDENTIALS,
    allow_methods=settings.ALLOW_METHODS,
    allow_headers=settings.ALLOW_HEADERS,
)

@app.get("/api/hello")
def hello():
    return {"message": "Hello from backend!"}

# Приклади маршрутів для Ticket

@app.get("/api/{chat_id}/messages", response_model=List[MessageOut], tags=["Messages"])
async def get_messages(chat_id: int, db: Session = Depends(get_db)):
    messages = db.query(Message).filter(Message.chat_id == chat_id).all()
    if not messages:
        raise HTTPException(status_code=404, detail="Чат не знайдено або немає повідомлень")
    return messages

@app.post("/api/{chat_id}/messages", response_model=MessageOut, tags=["Messages"])
async def create_message(chat_id: int, message: MessageCreate, db: Session = Depends(get_db)):
    new_message = Message(
        chat_id=chat_id,
        sender=message.sender,
        content=message.content
    )
    db.add(new_message)
    db.commit()
    db.refresh(new_message)
    return new_message
